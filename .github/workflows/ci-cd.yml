name: CI/CD Pipeline

on:
  push:
    branches: [ main ]  # Adjust based on your branch name

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for frontend
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: mukeshsaini7/devops-sample-app-frontend:${{ github.sha }}

      - name: Build and push Docker image for backend
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: mukeshsaini7/devops-sample-app-backend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.0/2023-07-05/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Set up EKS Kubeconfig
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name sample-eks-cluster

      - name: Delete Existing Deployments (if any)
        continue-on-error: true
        run: |
          kubectl delete deployment frontend-deployment --ignore-not-found=true
          kubectl delete deployment backend-deployment --ignore-not-found=true

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s-manifests/frontend-deployment.yaml
          kubectl apply -f k8s-manifests/frontend-service.yaml
          kubectl apply -f k8s-manifests/backend-deployment.yaml
          kubectl apply -f k8s-manifests/backend-service.yaml
          kubectl apply -f k8s-manifests/mongo-service.yaml
          kubectl apply -f k8s-manifests/mongo-pvc.yaml
          kubectl apply -f k8s-manifests/mongo-statefulset.yaml

      - name: Verify Deployment Status
        run: |
          kubectl rollout status deployment/frontend-deployment --timeout=300s
          kubectl rollout status deployment/backend-deployment --timeout=300s
